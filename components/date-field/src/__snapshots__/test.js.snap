// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DateField can set input type to \`text\` 1`] = `
<src__StyledContainer>
  <LabelText />
  <MultiInputInput
    defaultValues={
      Object {
        "day": undefined,
        "month": undefined,
        "year": undefined,
      }
    }
    error={false}
    names={
      Object {
        "day": undefined,
        "month": undefined,
        "year": undefined,
      }
    }
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={Object {}}
  />
</src__StyledContainer>
`;

exports[`DateField has default input type \`number\` 1`] = `
<src__StyledContainer>
  <LabelText />
  <MultiInputInput
    defaultValues={
      Object {
        "day": undefined,
        "month": undefined,
        "year": undefined,
      }
    }
    error={false}
    names={
      Object {
        "day": undefined,
        "month": undefined,
        "year": undefined,
      }
    }
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value={Object {}}
  />
</src__StyledContainer>
`;

exports[`DateField matches wrappersnapshot: wrapper mount 1`] = `
.c1 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  color: #0b0c0c;
  display: block;
  clear: none;
  padding-bottom: 2px;
  margin-bottom: 0;
}

.c2 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 16px;
  line-height: 1.25;
  display: block;
  margin-bottom: 15px;
  clear: both;
  color: #b10e1e;
}

.c6 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  box-sizing: border-box;
  width: 100%;
  height: 40px;
  margin-top: 0;
  padding: 5px;
  border: 2px solid #0b0c0c;
  border-radius: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: 4px solid #b10e1e;
  margin-bottom: 0;
}

.c6:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c6::-webkit-outer-spin-button,
.c6::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
}

.c6[type="number"] {
  -moz-appearance: textfield;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  box-sizing: border-box;
  margin-bottom: 0;
}

.c5:after {
  content: '';
  display: table;
  clear: both;
}

.c4 {
  margin-right: 20px;
  margin-bottom: 0;
  width: 50px;
}

.c7 {
  margin-right: 20px;
  margin-bottom: 0;
  width: 70px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-left: 4px solid #b10e1e;
  margin-right: 15px;
  padding-left: 10px;
  margin-bottom: 20px;
}

@media print {
  .c1 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c1 {
    color: #000;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    margin-bottom: 0;
  }
}

@media print {
  .c2 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c2 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c6 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c6 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media only screen and (min-width:641px) {
  .c6 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 30px;
  }
}

<DateField
  defaultValues={
    Object {
      "day": undefined,
      "month": undefined,
      "year": undefined,
    }
  }
  errorText="example"
  inputNames={
    Object {
      "day": undefined,
      "month": undefined,
      "year": undefined,
    }
  }
>
  <src__StyledContainer
    errorText="example"
  >
    <StyledComponent
      errorText="example"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "src__StyledContainer-sc-7o2d9e-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display: flex;",
              "flex-direction: column;",
              [Function],
              [Function],
            ],
          },
          "displayName": "src__StyledContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "src__StyledContainer-sc-7o2d9e-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <LabelText
          errorText="example"
        >
          <src__StyledLabelText
            errorText="example"
          >
            <StyledComponent
              errorText="example"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "font-family: \\"nta\\", Arial, sans-serif;",
                      "-webkit-font-smoothing: antialiased;",
                      "-moz-osx-font-smoothing: grayscale;",
                      "@media print {",
                      "font-size: 14px;",
                      "line-height: 1.15;",
                      "}",
                      "font-weight: 400;",
                      "font-size: 16px;",
                      "line-height: 1.25;",
                      "@media only screen and (min-width: 641px) {",
                      "font-size: 19px;",
                      "line-height: 1.3157894736842106;",
                      "}",
                      "color: #0b0c0c;",
                      "@media print {",
                      "color: #000;",
                      "}",
                      "display: block;",
                      "clear: none;",
                      "padding-bottom: 2px;",
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "src__StyledLabelText",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1"
              >
                example
              </span>
            </StyledComponent>
          </src__StyledLabelText>
        </LabelText>
        <ErrorText
          errorText="example"
        >
          <src__StyledError
            errorText="example"
          >
            <StyledComponent
              errorText="example"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "src__StyledError-q8g4f0-0",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "font-family: \\"nta\\", Arial, sans-serif;",
                      "-webkit-font-smoothing: antialiased;",
                      "-moz-osx-font-smoothing: grayscale;",
                      "@media print {",
                      "font-size: 14px;",
                      "line-height: 1.15;",
                      "}",
                      "font-weight: 700;",
                      "font-size: 16px;",
                      "line-height: 1.25;",
                      "@media only screen and (min-width: 641px) {",
                      "font-size: 19px;",
                      "line-height: 1.3157894736842106;",
                      "}",
                      "display: block;",
                      "margin-bottom: 15px;",
                      "clear: both;",
                      "color: #b10e1e;",
                      [Function],
                    ],
                  },
                  "displayName": "src__StyledError",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "src__StyledError-q8g4f0-0",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c2"
              >
                example
              </span>
            </StyledComponent>
          </src__StyledError>
        </ErrorText>
        <MultiInputInput
          defaultValues={
            Object {
              "day": undefined,
              "month": undefined,
              "year": undefined,
            }
          }
          error={true}
          names={
            Object {
              "day": undefined,
              "month": undefined,
              "year": undefined,
            }
          }
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          value={Object {}}
        >
          <Input
            defaultValues={
              Object {
                "day": undefined,
                "month": undefined,
                "year": undefined,
              }
            }
            error={true}
            labels={
              Object {
                "day": "Day",
                "month": "Month",
                "year": "Year",
              }
            }
            names={
              Object {
                "day": undefined,
                "month": undefined,
                "year": undefined,
              }
            }
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            refs={[Function]}
            type="number"
            value={Object {}}
          >
            <input__StyledList>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "input__StyledList-sc-1yy0xju-1",
                      "isStatic": true,
                      "lastClassName": "c3",
                      "rules": Array [
                        "display: flex;",
                      ],
                    },
                    "displayName": "input__StyledList",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "input__StyledList-sc-1yy0xju-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c3"
                >
                  <input__StyledLabel
                    year={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c7",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={false}
                    >
                      <Label
                        className="c4"
                        error={false}
                        year={false}
                      >
                        <src__StyledLabel
                          className="c4"
                          error={false}
                          year={false}
                        >
                          <StyledComponent
                            className="c4"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={false}
                          >
                            <label
                              className="c4 c5"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Day
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={true}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                              >
                                <StyledComponent
                                  error={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c6",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                >
                                  <input
                                    className="c6"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                  <input__StyledLabel
                    year={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c7",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={false}
                    >
                      <Label
                        className="c4"
                        error={false}
                        year={false}
                      >
                        <src__StyledLabel
                          className="c4"
                          error={false}
                          year={false}
                        >
                          <StyledComponent
                            className="c4"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={false}
                          >
                            <label
                              className="c4 c5"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Month
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={true}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                              >
                                <StyledComponent
                                  error={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c6",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                >
                                  <input
                                    className="c6"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                  <input__StyledLabel
                    year={true}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c7",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={true}
                    >
                      <Label
                        className="c7"
                        error={false}
                        year={true}
                      >
                        <src__StyledLabel
                          className="c7"
                          error={false}
                          year={true}
                        >
                          <StyledComponent
                            className="c7"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={true}
                          >
                            <label
                              className="c7 c5"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Year
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={true}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                              >
                                <StyledComponent
                                  error={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c6",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                >
                                  <input
                                    className="c6"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                </div>
              </StyledComponent>
            </input__StyledList>
          </Input>
        </MultiInputInput>
      </div>
    </StyledComponent>
  </src__StyledContainer>
</DateField>
`;

exports[`DateField should support null value: null value 1`] = `
.c1 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  color: #0b0c0c;
  display: block;
  clear: none;
  padding-bottom: 2px;
  margin-bottom: 0;
}

.c5 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  box-sizing: border-box;
  width: 100%;
  height: 40px;
  margin-top: 0;
  padding: 5px;
  border: 2px solid #0b0c0c;
  border-radius: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin-bottom: 0;
}

.c5:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c5::-webkit-outer-spin-button,
.c5::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
}

.c5[type="number"] {
  -moz-appearance: textfield;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  box-sizing: border-box;
  margin-bottom: 0;
}

.c4:after {
  content: '';
  display: table;
  clear: both;
}

.c3 {
  margin-right: 20px;
  margin-bottom: 0;
  width: 50px;
}

.c6 {
  margin-right: 20px;
  margin-bottom: 0;
  width: 70px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 20px;
}

@media print {
  .c1 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c1 {
    color: #000;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    margin-bottom: 0;
  }
}

@media print {
  .c5 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 30px;
  }
}

<DateField
  defaultValues={
    Object {
      "day": undefined,
      "month": undefined,
      "year": undefined,
    }
  }
  input={
    Object {
      "value": null,
    }
  }
  inputNames={
    Object {
      "day": undefined,
      "month": undefined,
      "year": undefined,
    }
  }
>
  <src__StyledContainer>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "src__StyledContainer-sc-7o2d9e-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display: flex;",
              "flex-direction: column;",
              [Function],
              [Function],
            ],
          },
          "displayName": "src__StyledContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "src__StyledContainer-sc-7o2d9e-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <LabelText>
          <src__StyledLabelText>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "font-family: \\"nta\\", Arial, sans-serif;",
                      "-webkit-font-smoothing: antialiased;",
                      "-moz-osx-font-smoothing: grayscale;",
                      "@media print {",
                      "font-size: 14px;",
                      "line-height: 1.15;",
                      "}",
                      "font-weight: 400;",
                      "font-size: 16px;",
                      "line-height: 1.25;",
                      "@media only screen and (min-width: 641px) {",
                      "font-size: 19px;",
                      "line-height: 1.3157894736842106;",
                      "}",
                      "color: #0b0c0c;",
                      "@media print {",
                      "color: #000;",
                      "}",
                      "display: block;",
                      "clear: none;",
                      "padding-bottom: 2px;",
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "src__StyledLabelText",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1"
              />
            </StyledComponent>
          </src__StyledLabelText>
        </LabelText>
        <MultiInputInput
          defaultValues={
            Object {
              "day": undefined,
              "month": undefined,
              "year": undefined,
            }
          }
          error={false}
          names={
            Object {
              "day": undefined,
              "month": undefined,
              "year": undefined,
            }
          }
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          value={null}
        >
          <Input
            defaultValues={
              Object {
                "day": undefined,
                "month": undefined,
                "year": undefined,
              }
            }
            error={false}
            labels={
              Object {
                "day": "Day",
                "month": "Month",
                "year": "Year",
              }
            }
            names={
              Object {
                "day": undefined,
                "month": undefined,
                "year": undefined,
              }
            }
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            refs={[Function]}
            type="number"
            value={null}
          >
            <input__StyledList>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "input__StyledList-sc-1yy0xju-1",
                      "isStatic": true,
                      "lastClassName": "c2",
                      "rules": Array [
                        "display: flex;",
                      ],
                    },
                    "displayName": "input__StyledList",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "input__StyledList-sc-1yy0xju-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c2"
                >
                  <input__StyledLabel
                    year={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={false}
                    >
                      <Label
                        className="c3"
                        error={false}
                        year={false}
                      >
                        <src__StyledLabel
                          className="c3"
                          error={false}
                          year={false}
                        >
                          <StyledComponent
                            className="c3"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={false}
                          >
                            <label
                              className="c3 c4"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Day
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                              >
                                <StyledComponent
                                  error={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                >
                                  <input
                                    className="c5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                  <input__StyledLabel
                    year={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={false}
                    >
                      <Label
                        className="c3"
                        error={false}
                        year={false}
                      >
                        <src__StyledLabel
                          className="c3"
                          error={false}
                          year={false}
                        >
                          <StyledComponent
                            className="c3"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={false}
                          >
                            <label
                              className="c3 c4"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Month
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                              >
                                <StyledComponent
                                  error={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                >
                                  <input
                                    className="c5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                  <input__StyledLabel
                    year={true}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={true}
                    >
                      <Label
                        className="c6"
                        error={false}
                        year={true}
                      >
                        <src__StyledLabel
                          className="c6"
                          error={false}
                          year={true}
                        >
                          <StyledComponent
                            className="c6"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={true}
                          >
                            <label
                              className="c6 c4"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Year
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                              >
                                <StyledComponent
                                  error={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                >
                                  <input
                                    className="c5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                </div>
              </StyledComponent>
            </input__StyledList>
          </Input>
        </MultiInputInput>
      </div>
    </StyledComponent>
  </src__StyledContainer>
</DateField>
`;

exports[`DateField should support setting value: value 1 2 3 1`] = `
.c1 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  color: #0b0c0c;
  display: block;
  clear: none;
  padding-bottom: 2px;
  margin-bottom: 0;
}

.c5 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  box-sizing: border-box;
  width: 100%;
  height: 40px;
  margin-top: 0;
  padding: 5px;
  border: 2px solid #0b0c0c;
  border-radius: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin-bottom: 0;
}

.c5:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c5::-webkit-outer-spin-button,
.c5::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
}

.c5[type="number"] {
  -moz-appearance: textfield;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  box-sizing: border-box;
  margin-bottom: 0;
}

.c4:after {
  content: '';
  display: table;
  clear: both;
}

.c3 {
  margin-right: 20px;
  margin-bottom: 0;
  width: 50px;
}

.c6 {
  margin-right: 20px;
  margin-bottom: 0;
  width: 70px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 20px;
}

@media print {
  .c1 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c1 {
    color: #000;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    margin-bottom: 0;
  }
}

@media print {
  .c5 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 30px;
  }
}

<DateField
  defaultValues={
    Object {
      "day": undefined,
      "month": undefined,
      "year": undefined,
    }
  }
  input={
    Object {
      "value": Object {
        "day": "1",
        "month": "2",
        "year": "3",
      },
    }
  }
  inputNames={
    Object {
      "day": undefined,
      "month": undefined,
      "year": undefined,
    }
  }
>
  <src__StyledContainer>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "src__StyledContainer-sc-7o2d9e-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display: flex;",
              "flex-direction: column;",
              [Function],
              [Function],
            ],
          },
          "displayName": "src__StyledContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "src__StyledContainer-sc-7o2d9e-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <LabelText>
          <src__StyledLabelText>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "font-family: \\"nta\\", Arial, sans-serif;",
                      "-webkit-font-smoothing: antialiased;",
                      "-moz-osx-font-smoothing: grayscale;",
                      "@media print {",
                      "font-size: 14px;",
                      "line-height: 1.15;",
                      "}",
                      "font-weight: 400;",
                      "font-size: 16px;",
                      "line-height: 1.25;",
                      "@media only screen and (min-width: 641px) {",
                      "font-size: 19px;",
                      "line-height: 1.3157894736842106;",
                      "}",
                      "color: #0b0c0c;",
                      "@media print {",
                      "color: #000;",
                      "}",
                      "display: block;",
                      "clear: none;",
                      "padding-bottom: 2px;",
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "src__StyledLabelText",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1"
              />
            </StyledComponent>
          </src__StyledLabelText>
        </LabelText>
        <MultiInputInput
          defaultValues={
            Object {
              "day": undefined,
              "month": undefined,
              "year": undefined,
            }
          }
          error={false}
          names={
            Object {
              "day": undefined,
              "month": undefined,
              "year": undefined,
            }
          }
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          value={
            Object {
              "day": "1",
              "month": "2",
              "year": "3",
            }
          }
        >
          <Input
            defaultValues={
              Object {
                "day": undefined,
                "month": undefined,
                "year": undefined,
              }
            }
            error={false}
            labels={
              Object {
                "day": "Day",
                "month": "Month",
                "year": "Year",
              }
            }
            names={
              Object {
                "day": undefined,
                "month": undefined,
                "year": undefined,
              }
            }
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            refs={[Function]}
            type="number"
            value={
              Object {
                "day": "1",
                "month": "2",
                "year": "3",
              }
            }
          >
            <input__StyledList>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "input__StyledList-sc-1yy0xju-1",
                      "isStatic": true,
                      "lastClassName": "c2",
                      "rules": Array [
                        "display: flex;",
                      ],
                    },
                    "displayName": "input__StyledList",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "input__StyledList-sc-1yy0xju-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c2"
                >
                  <input__StyledLabel
                    year={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={false}
                    >
                      <Label
                        className="c3"
                        error={false}
                        year={false}
                      >
                        <src__StyledLabel
                          className="c3"
                          error={false}
                          year={false}
                        >
                          <StyledComponent
                            className="c3"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={false}
                          >
                            <label
                              className="c3 c4"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Day
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                                value="1"
                              >
                                <StyledComponent
                                  error={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                  value="1"
                                >
                                  <input
                                    className="c5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                    value="1"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                  <input__StyledLabel
                    year={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={false}
                    >
                      <Label
                        className="c3"
                        error={false}
                        year={false}
                      >
                        <src__StyledLabel
                          className="c3"
                          error={false}
                          year={false}
                        >
                          <StyledComponent
                            className="c3"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={false}
                          >
                            <label
                              className="c3 c4"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Month
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                                value="2"
                              >
                                <StyledComponent
                                  error={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                  value="2"
                                >
                                  <input
                                    className="c5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                    value="2"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                  <input__StyledLabel
                    year={true}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "input__StyledLabel-sc-1yy0xju-0",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "margin-right: 20px;",
                              "margin-bottom: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "input__StyledLabel",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "input__StyledLabel-sc-1yy0xju-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      year={true}
                    >
                      <Label
                        className="c6"
                        error={false}
                        year={true}
                      >
                        <src__StyledLabel
                          className="c6"
                          error={false}
                          year={true}
                        >
                          <StyledComponent
                            className="c6"
                            error={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "src__StyledLabel-sc-14n2scx-0",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "display: flex;",
                                    "flex-direction: column;",
                                    "box-sizing: border-box;",
                                    ":after {",
                                    "content: '';",
                                    "display: table;",
                                    "clear: both;",
                                    "}",
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "src__StyledLabel",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "src__StyledLabel-sc-14n2scx-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            year={true}
                          >
                            <label
                              className="c6 c4"
                            >
                              <LabelText>
                                <src__StyledLabelText>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "src__StyledLabelText-sc-12l0n4z-0",
                                          "isStatic": false,
                                          "lastClassName": "c1",
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif;",
                                            "-webkit-font-smoothing: antialiased;",
                                            "-moz-osx-font-smoothing: grayscale;",
                                            "@media print {",
                                            "font-size: 14px;",
                                            "line-height: 1.15;",
                                            "}",
                                            "font-weight: 400;",
                                            "font-size: 16px;",
                                            "line-height: 1.25;",
                                            "@media only screen and (min-width: 641px) {",
                                            "font-size: 19px;",
                                            "line-height: 1.3157894736842106;",
                                            "}",
                                            "color: #0b0c0c;",
                                            "@media print {",
                                            "color: #000;",
                                            "}",
                                            "display: block;",
                                            "clear: none;",
                                            "padding-bottom: 2px;",
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "src__StyledLabelText",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "src__StyledLabelText-sc-12l0n4z-0",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <span
                                      className="c1"
                                    >
                                      Year
                                    </span>
                                  </StyledComponent>
                                </src__StyledLabelText>
                              </LabelText>
                              <src__StyledInput
                                error={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="number"
                                value="3"
                              >
                                <StyledComponent
                                  error={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "src__StyledInput-u8exb4-0",
                                        "isStatic": false,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "font-family: \\"nta\\", Arial, sans-serif;",
                                          "-webkit-font-smoothing: antialiased;",
                                          "-moz-osx-font-smoothing: grayscale;",
                                          "@media print {",
                                          "font-size: 14px;",
                                          "line-height: 1.15;",
                                          "}",
                                          "font-weight: 400;",
                                          "font-size: 16px;",
                                          "line-height: 1.25;",
                                          "@media only screen and (min-width: 641px) {",
                                          "font-size: 19px;",
                                          "line-height: 1.3157894736842106;",
                                          "}",
                                          "&:focus {",
                                          "outline: 3px solid #ffbf47;",
                                          "outline-offset: 0;",
                                          "}",
                                          "box-sizing: border-box;",
                                          "width: 100%;",
                                          "height: 40px;",
                                          "margin-top: 0;",
                                          "padding: 5px;",
                                          "border: 2px solid #0b0c0c;",
                                          "border-radius: 0;",
                                          "appearance: none;",
                                          "&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {",
                                          "margin: 0;",
                                          "-webkit-appearance: none;",
                                          "}",
                                          "&[type=\\"number\\"] {",
                                          "-moz-appearance: textfield;",
                                          "}",
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "src__StyledInput",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "src__StyledInput-u8exb4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="number"
                                  value="3"
                                >
                                  <input
                                    className="c5"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="number"
                                    value="3"
                                  />
                                </StyledComponent>
                              </src__StyledInput>
                            </label>
                          </StyledComponent>
                        </src__StyledLabel>
                      </Label>
                    </StyledComponent>
                  </input__StyledLabel>
                </div>
              </StyledComponent>
            </input__StyledList>
          </Input>
        </MultiInputInput>
      </div>
    </StyledComponent>
  </src__StyledContainer>
</DateField>
`;
